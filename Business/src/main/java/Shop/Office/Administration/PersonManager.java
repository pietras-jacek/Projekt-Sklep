package Shop.Office.Administration;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import Shop.Office.Persons.Person;

public class PersonManager implements ManagerInterface<Person>{

	Connection conn;
	private String url = "jdbc:hsqldb:hsql://localhost/workdb";
	
	String createTable=
			"CREATE TABLE Person(id bigint GENERATED BY DEFAULT AS IDENTITY," +
			" name varchar(20), pesel varchar(20))";
 
	Statement statement;
	PreparedStatement addPersonStatement;
	PreparedStatement deletePersonStatement;
	PreparedStatement getAllPersonsStatement;
	PreparedStatement getPersonByIdStatement;
	public PersonManager()
	{
		try {
			conn=DriverManager.getConnection(url);
			statement = conn.createStatement();
			
			ResultSet rs = conn.getMetaData().getTables(null, null, null,
					null);
			boolean tableExists = false;
			while (rs.next()) {
				if ("Person".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}
			
			if(!tableExists)
			{
				statement.executeUpdate(createTable);
				
			}
			
			addPersonStatement = conn
					.prepareStatement(
							"INSERT INTO Person (name, pesel) " +
							"VALUES (?, ?)");
			deletePersonStatement=conn
					.prepareStatement("DELETE From Person WHERE name=?");
			getAllPersonsStatement = conn
					.prepareStatement("SELECT * FROM Person");
			getPersonByIdStatement=conn
					.prepareStatement("SELECT * FROM Person WHERE id=?");
			
		} catch (SQLException e) {
			
			e.printStackTrace();
		}
	}
	
	
	
	public Person get(int id) {
		try {
			getPersonByIdStatement.setInt(1, id);
			ResultSet rs= getPersonByIdStatement.executeQuery();
			while(rs.next())
			{
				return new Person(rs.getString("Name"),rs.getString("pesel"));
			}
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return null;
	}

	
	public List<Person> getAll() {
		List<Person> result= new ArrayList<Person>();
		
		try {
			ResultSet rs= getAllPersonsStatement.executeQuery();
			while(rs.next())
			{
				Person p = new Person();
				p.setName(rs.getString("name"));
				p.setPesel(rs.getString("pesel"));
				result.add(p);
			}
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return result;
	}

	
	public boolean save(Person obj) {
		try {
			addPersonStatement.setString(1, obj.getName());
			addPersonStatement.setString(2, obj.getPesel());
			return addPersonStatement.execute();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return false;
	}

	
	public boolean delete(Person obj) {
		
		try {
			deletePersonStatement.setString(1, obj.getName());
			deletePersonStatement.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return false;
	}

}
